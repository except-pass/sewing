# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/display.ipynb (unless otherwise specified).

__all__ = ['DiscordEncoder', 'Formatter']

# Cell
import discord


# Cell

import json

class DiscordEncoder(json.JSONEncoder):
    def default(self, u):

        if isinstance(u, discord.Message):
            serialized = {
                "id": u.id,
                "content": u.content,
                "author": u.author.name,
                "created_at": u.created_at.isoformat()
            }
            return serialized
        elif isinstance(u, discord.Thread):
            return 'Thread: {}'.format(u.name)
        else:
            type_name = u.__class__.__name__
            raise TypeError("Unexpected type {0}".format(type_name))


class Formatter:
    def __init__(self):
        self.lines = []

    def add(self, thing):
        if isinstance(thing, discord.Message):
            serialized = {
                "id": thing.id,
                "content": thing.content,
                "author": thing.author.name,
                "created_at": thing.created_at.isoformat()
            }

        elif isinstance(thing, discord.Thread):
            serialized = 'Thread: {}'.format(thing.name)

        elif isinstance(thing, discord.Channel):
            serialized = 'Channel: {}'.format(thing.name)

        elif isinstance(thing, discord.Guild):
            serialized = 'Channel: {}'.format(thing.name)

        entry = json.dumps(serialized)
        self.lines.append(entry)
